plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.flywaydb.flyway' version '6.5.5'
}

group = 'br.com.doliversilva'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'

    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Log
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    // Documentation
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
}

flyway {
    def env = ""
    def props = new Properties()
    if(project.hasProperty("env")) {
        if(project.findProperty("env") != "local"){
            env = "-" + project.findProperty("env")
        }
    }
    file("src/main/resources/application"+env+".properties").withInputStream {props.load(it) }
    def db_url = props.getProperty("spring.datasource.url")
    def db_user = props.getProperty("spring.datasource.username")
    def db_pass = props.getProperty("spring.datasource.password")

    url = db_url
    user = db_user
    password = db_pass
    schemas = ['finance']
}